# =============================================================================
# TrustBridge Environment Configuration
# =============================================================================
# Copy this file to .env.local for local development
# For deployment, set these variables in your platform's environment settings:
# - Netlify: Site Settings → Environment Variables
# - Vercel: Project Settings → Environment Variables
# Never commit actual values to version control!

# =============================================================================
# REQUIRED AUTHENTICATION & DATABASE CONFIGURATION
# =============================================================================

# NextAuth Secret (REQUIRED for JWT signing and session security)
# Generate a secure random secret: openssl rand -base64 32
# Must be at least 32 characters long for security
# CRITICAL: Replace with a unique, secure random string
NEXTAUTH_SECRET=your-nextauth-secret-key-here-replace-with-random-string

# NextAuth URL (REQUIRED for authentication callbacks)
# Local development: http://localhost:3000
# Production: https://yourdomain.com
# Netlify: https://your-site-name.netlify.app
# Vercel: https://your-project.vercel.app
NEXTAUTH_URL=http://localhost:3000

# Database URL (REQUIRED)
# Local development (SQLite):
DATABASE_URL="file:./dev.db"
# Production (PostgreSQL examples):
# DATABASE_URL="postgresql://username:password@host:port/database?sslmode=require"
# Supabase: postgresql://postgres:[password]@[host]:5432/postgres
# PlanetScale: mysql://[username]:[password]@[host]/[database]?sslaccept=strict

# =============================================================================
# REQUIRED BLOCKCHAIN & WEB3 CONFIGURATION
# =============================================================================

# WalletConnect Project ID (REQUIRED for wallet connections)
# 1. Create account at: https://cloud.walletconnect.com/
# 2. Create new project and copy the Project ID
# 3. Add your domain to allowed origins in WalletConnect dashboard
# CRITICAL: Replace with your actual WalletConnect Project ID
NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID=your_walletconnect_project_id_here

# TrustBridge Contract Address (REQUIRED)
# The deployed TrustBridge contract address on your target network
# Sepolia testnet example: 0x1234567890123456789012345678901234567890
# CRITICAL: Replace with your actual deployed contract address
NEXT_PUBLIC_CONTRACT_ADDRESS=0x1234567890123456789012345678901234567890

# Alchemy API Key (REQUIRED for reliable blockchain connectivity)
# 1. Create account at: https://www.alchemy.com/
# 2. Create new app for your target network (e.g., Sepolia)
# 3. Copy the API key from your app dashboard
# CRITICAL: Replace with your actual Alchemy API key
NEXT_PUBLIC_ALCHEMY_API_KEY=your_alchemy_api_key_here

# =============================================================================
# OPTIONAL BLOCKCHAIN CONFIGURATION
# =============================================================================

# Default network configuration (has sensible defaults)
# Sepolia testnet chain ID
NEXT_PUBLIC_DEFAULT_CHAIN_ID=11155111
# Network name for display purposes
NEXT_PUBLIC_NETWORK_NAME=sepolia

# Custom RPC URL (optional - if not set, will use Alchemy with network name)
# For serverless compatibility, you can specify a custom RPC endpoint
# NEXT_PUBLIC_RPC_URL=https://your-custom-rpc-endpoint.com

# Custom RPC URLs (Optional - uses Alchemy by default)
# Only set these if you want to use different RPC providers
# NEXT_PUBLIC_SEPOLIA_RPC_URL=https://sepolia.infura.io/v3/YOUR_INFURA_KEY
# NEXT_PUBLIC_MAINNET_RPC_URL=https://mainnet.infura.io/v3/YOUR_MAINNET_KEY

# =============================================================================
# IPFS CONFIGURATION (Optional)
# =============================================================================

# Pinata IPFS Configuration (Recommended for production)
PINATA_API_KEY=your_pinata_api_key_here
PINATA_SECRET_API_KEY=your_pinata_secret_key_here
PINATA_JWT=your_pinata_jwt_token_here
NEXT_PUBLIC_PINATA_GATEWAY_URL=https://gateway.pinata.cloud/ipfs/

# Alternative: Web3.Storage (Optional)
# NEXT_PUBLIC_WEB3_STORAGE_TOKEN=your_web3_storage_token_here

# IPFS Gateway URLs
NEXT_PUBLIC_IPFS_GATEWAY=https://ipfs.io/ipfs/
# NEXT_PUBLIC_IPFS_GATEWAY_BACKUP=https://cloudflare-ipfs.com/ipfs/

# =============================================================================
# APPLICATION SETTINGS (Optional)
# =============================================================================

# Development and debugging
# NEXT_PUBLIC_ENABLE_TESTNETS=true
# NEXT_PUBLIC_DEBUG_MODE=false
# NEXT_PUBLIC_ENABLE_ANALYTICS=false

# UI Configuration
# NEXT_PUBLIC_APP_NAME=TrustBridge
# NEXT_PUBLIC_APP_DESCRIPTION=Blockchain Document Verification

# Analytics (Optional)
# NEXT_PUBLIC_GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX
# NEXT_PUBLIC_MIXPANEL_TOKEN=your_mixpanel_token

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Rate limiting and security headers
# NEXT_PUBLIC_RATE_LIMIT_REQUESTS=100
# NEXT_PUBLIC_RATE_LIMIT_WINDOW=900000

# Content Security Policy
# NEXT_PUBLIC_CSP_ENABLED=true

# =============================================================================
# DEPLOYMENT PLATFORM COMPATIBILITY
# =============================================================================

# NETLIFY DEPLOYMENT:
# 1. Go to Site Settings → Environment Variables
# 2. Add each variable individually (without quotes for values)
# 3. Set NEXTAUTH_URL to your Netlify domain: https://your-site.netlify.app
# 4. Netlify automatically handles NEXT_PUBLIC_ variables for client-side access
# 5. Use Netlify's branch deploys for staging environments

# VERCEL DEPLOYMENT:
# 1. Go to Project Settings → Environment Variables
# 2. Add variables for Production, Preview, and Development environments
# 3. Set NEXTAUTH_URL to your Vercel domain: https://your-project.vercel.app
# 4. Vercel automatically exposes NEXT_PUBLIC_ variables to the client
# 5. Use Vercel's preview deployments for testing

# OTHER PLATFORMS (Docker, Railway, Render, etc.):
# 1. Set environment variables through your platform's interface
# 2. Ensure NEXTAUTH_URL matches your deployed domain
# 3. Verify NEXT_PUBLIC_ variables are accessible in the browser

# =============================================================================
# LOCAL DEVELOPMENT SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file: cp .env.example .env.local
# 2. Get WalletConnect Project ID from https://cloud.walletconnect.com/
# 3. Get Alchemy API key from https://www.alchemy.com/
# 4. Deploy TrustBridge contract or get existing address from deployment
# 5. (Optional) Set up Pinata account for IPFS: https://pinata.cloud/
# 6. Fill in the required values above
# 7. Run environment validation: npm run build (checks env vars)
# 8. Start development server: npm run dev
# 9. Check health endpoint: http://localhost:3000/api/health

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Never commit .env.local or actual API keys to version control
# 2. Use NEXT_PUBLIC_ prefix only for client-side variables
# 3. Keep sensitive keys (Pinata secrets, private keys) server-side only
# 4. Rotate API keys regularly
# 5. Use different keys for development and production environments
# 6. Monitor API usage and set up alerts for unusual activity

# =============================================================================
# VERIFICATION CHECKLIST
# =============================================================================

# ✓ Wallet connection works with WalletConnect
# ✓ Contract interactions succeed on Sepolia
# ✓ Network switching works properly
# ✓ IPFS uploads work (if configured)
# ✓ Document hashing and verification flow complete
# ✓ Error handling works for failed transactions
# ✓ UI displays proper network and connection status